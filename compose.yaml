services:
  franken:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      CADDY_ENV: ${CADDY_ENV:-dev}
      SERVER_NAME: ${SERVER_NAME:-app.localhost}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # RabbitMQ Management UI Basic Auth credentials for Caddy
      RABBITMQ_MANAGEMENT_USER: ${RABBITMQ_MANAGEMENT_USER:-mgmt}
      RABBITMQ_MANAGEMENT_PASSWORD: ${RABBITMQ_MANAGEMENT_PASSWORD:-!ChangeThisMgmtPassword!}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./var:/app/var
      - .:/app
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database:
    container_name: database
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_HOST_AUTH_METHOD: md5

      # Environmental variables for removing and restoring backup
      # See https://www.postgresql.org/docs/current/libpq-envars.html
      PGDATABASE: ${POSTGRES_DB:-app}
      PGUSER: ${POSTGRES_USER:-app}
      PGPASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      - database_backup:/backup:rw

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE:-SWQOKODSQALRPCLNMEQG}
    expose:
      - 5672
      - 15672
    ports:
      # Management UI port - only exposed in the dev environment by default
      - "127.0.0.1:15672:15672"
    volumes:
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json

  messenger-worker:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    depends_on:
      - database
      - rabbitmq
      - franken
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # RabbitMQ credentials for application
      RABBITMQ_APP_USER: ${RABBITMQ_APP_USER:-app}
      RABBITMQ_APP_PASSWORD: ${RABBITMQ_APP_PASSWORD:-!ChangeThisAppPassword!}
      FRANKENPHP_CONFIG: worker ./public/index.php
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./var:/app/var
      - .:/app
    working_dir: /app
    command: php bin/console messenger:consume async -vvv --time-limit=3600 --memory-limit=1024M
    deploy:
      replicas: 2


volumes:
  caddy_data:
  caddy_config:
  database_data:
  database_backup:

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
