services:
  php:
    build:
      context: .
      dockerfile: docker/frankenphp/Dockerfile
      target: frankenphp_base
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: :80 # Disable HTTPS by setting SERVER_NAME to listen on port 80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
      # bitrix24 application
      BITRIX24_PHP_SDK_APPLICATION_CLIENT_ID: ${BITRIX24_PHP_SDK_APPLICATION_CLIENT_ID}
      BITRIX24_PHP_SDK_APPLICATION_CLIENT_SECRET: ${BITRIX24_PHP_SDK_APPLICATION_CLIENT_SECRET}
      BITRIX24_PHP_SDK_APPLICATION_SCOPE: ${BITRIX24_PHP_SDK_APPLICATION_SCOPE}
      BITRIX24_PHP_SDK_LOCAL_APPLICATION_DOMAIN: ${BITRIX24_PHP_SDK_LOCAL_APPLICATION_DOMAIN}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./var/log:/app/var/log
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  # Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
  ###> symfony/mercure-bundle ###
  ###< symfony/mercure-bundle ###

  ###> doctrine/doctrine-bundle ###
  database:
    container_name: database
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}

      # Environmental variables for removing and restoring backup
      # take from https://www.postgresql.org/docs/current/libpq-envars.html
      PGDATABASE: ${POSTGRES_DB:-app}
      PGUSER: ${POSTGRES_USER:-app}
      PGPASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      - database_backup:/backup:rw
###< doctrine/doctrine-bundle ###

volumes:
  caddy_data:
  caddy_config:
  database_data:
  database_backup:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
